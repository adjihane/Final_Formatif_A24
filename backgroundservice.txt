//À la base, on peut ajouter un BackgroundService de cette manière.**********************************

builder.Services.AddHostedService<MonBackgroundService>;

//Pour nous permettre d'accéder à notre BackgroundService dans notre Hub, on va utiliser cette technique qui déclare un service Singleton et l'enregistre ensuite comme HostedService.*****************

builder.Services.AddSingleton<MonBackgroundService>();
builder.Services.AddHostedService<MonBackgroundService>(p => p.GetService<MonBackgroundService>());


//On va utiliser un scope et un IServiceScopeFactory que l'on va injecter dans notre service :**************************************

public MonBackgroundService(IServiceScopeFactory serviceScopeFactory)
{
    _serviceScopeFactory = serviceScopeFactory;
}

public async Task DoSomething(CancellationToken stoppingToken)
{
    using (IServiceScope scope = _serviceScopeFactory.CreateScope())
    {
        BackgroundServiceContext dbContext = scope.ServiceProvider.GetRequiredService<BackgroundServiceContext>();

        // On peut maintenant utiliser le dbContext normalement
        // On peut également faire un SaveChanges
    }
    // Une fois que l'on va sortir du "using", le scope va être détruit et le dbContext associé au scope va également être détruit!
}


//Utilisation d'un IHubContext
//Ici on va voir comment appeler un Hub à partir d'un BackgroundService****************************************

public MonBackgroundService(IHubContext<MonHub> monHub, IServiceScopeFactory serviceScopeFactory)
{
    _monHub = monHub;
    _serviceScopeFactory = serviceScopeFactory;
}

public async Task DoSomething(CancellationToken stoppingToken)
{
    // On peut maintenant faire un appel à un Hub!
    _monHub.Clients.All.SendAsync("Method", data, stoppingToken);
}


//Utilisation du BackgroundService à partir du Hub***********************************************
//Pour une fois, rien de nouveau à apprendre! Comme le BackgroundService est un service Singleton, on peut simplement l'injecter dans notre constructeur et voilà!

public MonHub(MonBackgroundService backgroundService)
{
    _backgroundService = backgroundService;
}
